{"ast":null,"code":"var _jsxFileName = \"/home/vanellope/Programming/Javascript/Quickloan/frontend/src/components/Signup.js\";\nimport React, { useState } from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as userActions from '../redux/actions/userActions';\n\nconst mapStateToProps = ({\n  errors\n}) => ({\n  errors\n});\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(userActions, dispatch)\n});\n\nconst Signup = ({\n  errors,\n  actions,\n  history\n}) => {\n  const [showError, setShowError] = useState(false);\n  const formik = useFormik({\n    initialValues: {\n      firstName: \"\",\n      secondName: \"\",\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      passwordConfirmation: \"\"\n    },\n    validationSchema: Yup.object({\n      firstName: Yup.string().min(2, \"Must be 2 characters or more\").max(15, \"Must be 15 characters or less\").required(\"Required\"),\n      secondName: Yup.string().min(2, \"Must be 2 characters or more\").max(15, \"Must be 15 characters or less\").required(\"Required\"),\n      username: Yup.string().min(2, \"Must be 2 characters or more\").max(15, \"Must be 15 characters or less\").required(\"Required\"),\n      email: Yup.string().email('Invalid email address').required(\"Required\"),\n      password: Yup.string().matches(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{6,16}$/, `Must be 6-16 characters, one capital letter, one lowercase letter, one digit and one special character`).required(\"Required\"),\n      passwordConfirmation: Yup.string().oneOf([Yup.ref(\"password\"), null], \"Passwords must match\").required(\"Required\")\n    }),\n    onSubmit: values => {\n      const user = {\n        firstName: values.firstName,\n        secondName: values.secondName,\n        username: values.username,\n        email: values.email,\n        password: values.password\n      };\n\n      const signUser = async () => {\n        const signUp = await actions.signup(user);\n\n        if (signUp.user) {\n          return history.push(\"/login\");\n        }\n\n        setShowError(true);\n      };\n\n      signUser();\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"signup-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, \"Sign Up\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, showError && errors), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"firstName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, \"First Name\"), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    name: \"firstName\",\n    type: \"text\"\n  }, formik.getFieldProps(\"firstName\"), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  })), formik.touched.firstName && formik.errors.firstName ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, formik.errors.firstName) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"secondName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, \"Second Name\"), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    name: \"secondName\",\n    type: \"text\"\n  }, formik.getFieldProps(\"secondName\"), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  })), formik.touched.secondName && formik.errors.secondName ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, formik.errors.secondName) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    name: \"username\",\n    type: \"text\"\n  }, formik.getFieldProps(\"username\"), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  })), formik.touched.username && formik.errors.username ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, formik.errors.username) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    name: \"email\",\n    type: \"email\"\n  }, formik.getFieldProps(\"email\"), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  })), formik.touched.email && formik.errors.email ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, formik.errors.email) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    name: \"password\",\n    type: \"password\"\n  }, formik.getFieldProps(\"password\"), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  })), formik.touched.password && formik.errors.password ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, formik.errors.password) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"passwordConfirmation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, \"Password-Confirmation\"), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    name: \"passwordConfirmation\",\n    type: \"password\"\n  }, formik.getFieldProps(\"passwordConfirmation\"), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  })), formik.touched.passwordConfirmation && formik.errors.passwordConfirmation ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 15\n    }\n  }, formik.errors.passwordConfirmation) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, \"Sign Up\"), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      padding: \"4px\",\n      marginLeft: \"3px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, \"Already have an account\", \" \", /*#__PURE__*/React.createElement(Link, {\n    style: {\n      textDecoration: \"none\"\n    },\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, \"Login\")))));\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);","map":{"version":3,"sources":["/home/vanellope/Programming/Javascript/Quickloan/frontend/src/components/Signup.js"],"names":["React","useState","useFormik","Yup","Link","connect","bindActionCreators","userActions","mapStateToProps","errors","mapDispatchToProps","dispatch","actions","Signup","history","showError","setShowError","formik","initialValues","firstName","secondName","username","email","password","passwordConfirmation","validationSchema","object","string","min","max","required","matches","oneOf","ref","onSubmit","values","user","signUser","signUp","signup","push","handleSubmit","getFieldProps","touched","padding","marginLeft","textDecoration"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,OAAO,KAAKC,WAAZ,MAA6B,8BAA7B;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,MAAiB;AAAEA,EAAAA;AAAF,CAAjB,CAAxB;;AAEA,MAAMC,kBAAkB,GAAGC,QAAQ,KACjC;AAAEC,EAAAA,OAAO,EAAEN,kBAAkB,CAACC,WAAD,EAAcI,QAAd;AAA7B,CADiC,CAAnC;;AAIA,MAAME,MAAM,GAAG,CAAC;AAAEJ,EAAAA,MAAF;AAAUG,EAAAA,OAAV;AAAmBE,EAAAA;AAAnB,CAAD,KAAkC;AAC/C,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,KAAD,CAA1C;AAEA,QAAMgB,MAAM,GAAGf,SAAS,CAAC;AACvBgB,IAAAA,aAAa,EAAE;AACbC,MAAAA,SAAS,EAAE,EADE;AAEbC,MAAAA,UAAU,EAAE,EAFC;AAGbC,MAAAA,QAAQ,EAAE,EAHG;AAIbC,MAAAA,KAAK,EAAE,EAJM;AAKbC,MAAAA,QAAQ,EAAE,EALG;AAMbC,MAAAA,oBAAoB,EAAE;AANT,KADQ;AASvBC,IAAAA,gBAAgB,EAAEtB,GAAG,CAACuB,MAAJ,CAAW;AAC3BP,MAAAA,SAAS,EAAEhB,GAAG,CAACwB,MAAJ,GACRC,GADQ,CACJ,CADI,EACD,8BADC,EAERC,GAFQ,CAEJ,EAFI,EAEA,+BAFA,EAGRC,QAHQ,CAGC,UAHD,CADgB;AAK3BV,MAAAA,UAAU,EAAEjB,GAAG,CAACwB,MAAJ,GACTC,GADS,CACL,CADK,EACF,8BADE,EAETC,GAFS,CAEL,EAFK,EAED,+BAFC,EAGTC,QAHS,CAGA,UAHA,CALe;AAS3BT,MAAAA,QAAQ,EAAElB,GAAG,CAACwB,MAAJ,GACPC,GADO,CACH,CADG,EACA,8BADA,EAEPC,GAFO,CAEH,EAFG,EAEC,+BAFD,EAGPC,QAHO,CAGE,UAHF,CATiB;AAa3BR,MAAAA,KAAK,EAAEnB,GAAG,CAACwB,MAAJ,GACJL,KADI,CACE,uBADF,EAEJQ,QAFI,CAEK,UAFL,CAboB;AAgB3BP,MAAAA,QAAQ,EAAEpB,GAAG,CAACwB,MAAJ,GACPI,OADO,CAEN,mEAFM,EAGL,wGAHK,EAKPD,QALO,CAKE,UALF,CAhBiB;AAsB3BN,MAAAA,oBAAoB,EAAErB,GAAG,CAACwB,MAAJ,GACnBK,KADmB,CACb,CAAC7B,GAAG,CAAC8B,GAAJ,CAAQ,UAAR,CAAD,EAAsB,IAAtB,CADa,EACgB,sBADhB,EAEnBH,QAFmB,CAEV,UAFU;AAtBK,KAAX,CATK;AAmCvBI,IAAAA,QAAQ,EAAGC,MAAD,IAAY;AACpB,YAAMC,IAAI,GAAG;AACXjB,QAAAA,SAAS,EAAEgB,MAAM,CAAChB,SADP;AAEXC,QAAAA,UAAU,EAAEe,MAAM,CAACf,UAFR;AAGXC,QAAAA,QAAQ,EAAEc,MAAM,CAACd,QAHN;AAIXC,QAAAA,KAAK,EAAEa,MAAM,CAACb,KAJH;AAKXC,QAAAA,QAAQ,EAAEY,MAAM,CAACZ;AALN,OAAb;;AAOA,YAAMc,QAAQ,GAAG,YAAY;AAC3B,cAAMC,MAAM,GAAG,MAAM1B,OAAO,CAAC2B,MAAR,CAAeH,IAAf,CAArB;;AACA,YAAIE,MAAM,CAACF,IAAX,EAAiB;AACf,iBAAOtB,OAAO,CAAC0B,IAAR,CAAa,QAAb,CAAP;AACD;;AACDxB,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,OAND;;AAOAqB,MAAAA,QAAQ;AACT;AAnDsB,GAAD,CAAxB;AAsDA,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADF,eAIE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBtB,SAAS,IAAIN,MAArC,CAJF,eAME;AAAM,IAAA,QAAQ,EAAEQ,MAAM,CAACwB,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,IAAA,IAAI,EAAC,WADP;AAEE,IAAA,IAAI,EAAC;AAFP,KAGMxB,MAAM,CAACyB,aAAP,CAAqB,WAArB,CAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,EAOGzB,MAAM,CAAC0B,OAAP,CAAexB,SAAf,IAA4BF,MAAM,CAACR,MAAP,CAAcU,SAA1C,gBACC;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBF,MAAM,CAACR,MAAP,CAAcU,SAAtC,CADD,GAEG,IATN,CADF,eAYE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AACE,IAAA,IAAI,EAAC,YADP;AAEE,IAAA,IAAI,EAAC;AAFP,KAGMF,MAAM,CAACyB,aAAP,CAAqB,YAArB,CAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,EAOGzB,MAAM,CAAC0B,OAAP,CAAevB,UAAf,IAA6BH,MAAM,CAACR,MAAP,CAAcW,UAA3C,gBACC;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBH,MAAM,CAACR,MAAP,CAAcW,UAAtC,CADD,GAEG,IATN,CAZF,eAuBE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,IAAI,EAAC;AAFP,KAGMH,MAAM,CAACyB,aAAP,CAAqB,UAArB,CAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,EAOGzB,MAAM,CAAC0B,OAAP,CAAetB,QAAf,IAA2BJ,MAAM,CAACR,MAAP,CAAcY,QAAzC,gBACC;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBJ,MAAM,CAACR,MAAP,CAAcY,QAAtC,CADD,GAEG,IATN,CAvBF,eAkCE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,IAAI,EAAC;AAAzB,KAAqCJ,MAAM,CAACyB,aAAP,CAAqB,OAArB,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,EAGGzB,MAAM,CAAC0B,OAAP,CAAerB,KAAf,IAAwBL,MAAM,CAACR,MAAP,CAAca,KAAtC,gBACC;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBL,MAAM,CAACR,MAAP,CAAca,KAAtC,CADD,GAEG,IALN,CAlCF,eAyCE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,IAAI,EAAC;AAFP,KAGML,MAAM,CAACyB,aAAP,CAAqB,UAArB,CAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,EAOGzB,MAAM,CAAC0B,OAAP,CAAepB,QAAf,IAA2BN,MAAM,CAACR,MAAP,CAAcc,QAAzC,gBACC;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBN,MAAM,CAACR,MAAP,CAAcc,QAAtC,CADD,GAEG,IATN,CAzCF,eAoDE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,eAEE;AACE,IAAA,IAAI,EAAC,sBADP;AAEE,IAAA,IAAI,EAAC;AAFP,KAGMN,MAAM,CAACyB,aAAP,CAAqB,sBAArB,CAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,EAOGzB,MAAM,CAAC0B,OAAP,CAAenB,oBAAf,IACCP,MAAM,CAACR,MAAP,CAAce,oBADf,gBAEG;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBP,MAAM,CAACR,MAAP,CAAce,oBAAtC,CAFH,GAGK,IAVR,CApDF,eAgEE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAIE;AAAG,IAAA,KAAK,EAAE;AAAEoB,MAAAA,OAAO,EAAE,KAAX;AAAkBC,MAAAA,UAAU,EAAE;AAA9B,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAC0B,GAD1B,eAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,cAAc,EAAE;AAAlB,KAAb;AAAyC,IAAA,EAAE,EAAC,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,CAJF,CAhEF,CANF,CADF;AAqFD,CA9ID;;AAgJA,eAAezC,OAAO,CAACG,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CG,MAA7C,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as userActions from '../redux/actions/userActions';\n\nconst mapStateToProps = ({ errors }) => ({ errors });\n\nconst mapDispatchToProps = dispatch => (\n  { actions: bindActionCreators(userActions, dispatch) }\n);\n\nconst Signup = ({ errors, actions, history }) => {\n  const [showError, setShowError] = useState(false);\n\n  const formik = useFormik({\n    initialValues: {\n      firstName: \"\",\n      secondName: \"\",\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      passwordConfirmation: \"\",\n    },\n    validationSchema: Yup.object({\n      firstName: Yup.string()\n        .min(2, \"Must be 2 characters or more\")\n        .max(15, \"Must be 15 characters or less\")\n        .required(\"Required\"),\n      secondName: Yup.string()\n        .min(2, \"Must be 2 characters or more\")\n        .max(15, \"Must be 15 characters or less\")\n        .required(\"Required\"),\n      username: Yup.string()\n        .min(2, \"Must be 2 characters or more\")\n        .max(15, \"Must be 15 characters or less\")\n        .required(\"Required\"),\n      email: Yup.string()\n        .email('Invalid email address')\n        .required(\"Required\"),\n      password: Yup.string()\n        .matches(\n          /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{6,16}$/,\n          `Must be 6-16 characters, one capital letter, one lowercase letter, one digit and one special character`\n        )\n        .required(\"Required\"),\n      passwordConfirmation: Yup.string()\n        .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\n        .required(\"Required\"),\n    }),\n    onSubmit: (values) => {\n      const user = {\n        firstName: values.firstName,\n        secondName: values.secondName,\n        username: values.username,\n        email: values.email,\n        password: values.password,\n      };\n      const signUser = async () => {\n        const signUp = await actions.signup(user);\n        if (signUp.user) {\n          return history.push(\"/login\");\n        }\n        setShowError(true);\n      };\n      signUser();\n    },\n  });\n\n  return (\n    <div className=\"signup-form\">\n      <header>\n        <h1>Sign Up</h1>\n      </header>\n      <div className='error'>{showError && errors}</div>\n\n      <form onSubmit={formik.handleSubmit}>\n        <div className=\"form-row\">\n          <label htmlFor=\"firstName\">First Name</label>\n          <input\n            name=\"firstName\"\n            type=\"text\"\n            {...formik.getFieldProps(\"firstName\")}\n          />\n          {formik.touched.firstName && formik.errors.firstName ? (\n            <div className='error'>{formik.errors.firstName}</div>\n          ) : null}\n        </div>\n        <div className=\"form-row\">\n          <label htmlFor=\"secondName\">Second Name</label>\n          <input\n            name=\"secondName\"\n            type=\"text\"\n            {...formik.getFieldProps(\"secondName\")}\n          />\n          {formik.touched.secondName && formik.errors.secondName ? (\n            <div className='error'>{formik.errors.secondName}</div>\n          ) : null}\n        </div>\n        <div className=\"form-row\">\n          <label htmlFor=\"username\">Username</label>\n          <input\n            name=\"username\"\n            type=\"text\"\n            {...formik.getFieldProps(\"username\")}\n          />\n          {formik.touched.username && formik.errors.username ? (\n            <div className='error'>{formik.errors.username}</div>\n          ) : null}\n        </div>\n        <div className=\"form-row\">\n          <label htmlFor=\"email\">Email</label>\n          <input name=\"email\" type=\"email\" {...formik.getFieldProps(\"email\")} />\n          {formik.touched.email && formik.errors.email ? (\n            <div className='error'>{formik.errors.email}</div>\n          ) : null}\n        </div>\n        <div className=\"form-row\">\n          <label htmlFor=\"password\">Password</label>\n          <input\n            name=\"password\"\n            type=\"password\"\n            {...formik.getFieldProps(\"password\")}\n          />\n          {formik.touched.password && formik.errors.password ? (\n            <div className='error'>{formik.errors.password}</div>\n          ) : null}\n        </div>\n        <div className=\"form-row\">\n          <label htmlFor=\"passwordConfirmation\">Password-Confirmation</label>\n          <input\n            name=\"passwordConfirmation\"\n            type=\"password\"\n            {...formik.getFieldProps(\"passwordConfirmation\")}\n          />\n          {formik.touched.passwordConfirmation &&\n            formik.errors.passwordConfirmation ? (\n              <div className='error'>{formik.errors.passwordConfirmation}</div>\n            ) : null}\n        </div>\n        <div className=\"form-row\">\n          <button type='submit'>\n            Sign Up\n          </button>\n          <p style={{ padding: \"4px\", marginLeft: \"3px\" }}>\n            Already have an account{\" \"}\n            <Link style={{ textDecoration: \"none\" }} to=\"/login\">\n              Login\n            </Link>\n          </p>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);\n"]},"metadata":{},"sourceType":"module"}