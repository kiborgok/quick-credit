{"ast":null,"code":"import * as types from '../actions/actionTypes';\nimport initialState from './initialState';\n\nconst userReducer = (state = initialState.users, action) => {\n  switch (action.type) {\n    case types.LOAD_USERS_SUCCESS:\n    case types.CLEAR_ERRORS:\n      return action.users;\n\n    case types.LOAD_USER_SUCCESS:\n    case types.CLEAR_ERRORS:\n      return action.user;\n\n    case types.SIGN_UP_USER_SUCCESS:\n    case types.CLEAR_ERRORS:\n      return state;\n\n    case types.VERIFY_USER_SUCCESS:\n      return state.map(user => {\n        if (user._id === action.user.id) {\n          return { ...user,\n            status: action.user.status\n          };\n        }\n\n        return user;\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;","map":{"version":3,"sources":["/home/vanellope/Programming/Javascript/Quickloan/frontend/src/redux/reducers/userReducer.js"],"names":["types","initialState","userReducer","state","users","action","type","LOAD_USERS_SUCCESS","CLEAR_ERRORS","LOAD_USER_SUCCESS","user","SIGN_UP_USER_SUCCESS","VERIFY_USER_SUCCESS","map","_id","id","status"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,wBAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGF,YAAY,CAACG,KAAtB,EAA6BC,MAA7B,KAAwC;AACxD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,KAAK,CAACO,kBAAX;AACA,SAAKP,KAAK,CAACQ,YAAX;AACI,aAAOH,MAAM,CAACD,KAAd;;AACJ,SAAKJ,KAAK,CAACS,iBAAX;AACA,SAAKT,KAAK,CAACQ,YAAX;AACI,aAAOH,MAAM,CAACK,IAAd;;AACJ,SAAKV,KAAK,CAACW,oBAAX;AACA,SAAKX,KAAK,CAACQ,YAAX;AACI,aAAOL,KAAP;;AACJ,SAAKH,KAAK,CAACY,mBAAX;AACI,aAAOT,KAAK,CAACU,GAAN,CAAUH,IAAI,IAAI;AACrB,YAAIA,IAAI,CAACI,GAAL,KAAaT,MAAM,CAACK,IAAP,CAAYK,EAA7B,EAAiC;AAC7B,iBAAO,EACH,GAAGL,IADA;AAEHM,YAAAA,MAAM,EAAEX,MAAM,CAACK,IAAP,CAAYM;AAFjB,WAAP;AAIH;;AACD,eAAON,IAAP;AACH,OARM,CAAP;;AASJ;AACI,aAAOP,KAAP;AArBR;AAuBH,CAxBD;;AA0BA,eAAeD,WAAf","sourcesContent":["import * as types from '../actions/actionTypes';\nimport initialState from './initialState';\n\nconst userReducer = (state = initialState.users, action) => {\n    switch (action.type) {\n        case types.LOAD_USERS_SUCCESS:\n        case types.CLEAR_ERRORS:\n            return action.users\n        case types.LOAD_USER_SUCCESS:\n        case types.CLEAR_ERRORS:\n            return action.user\n        case types.SIGN_UP_USER_SUCCESS:\n        case types.CLEAR_ERRORS:\n            return state\n        case types.VERIFY_USER_SUCCESS:\n            return state.map(user => {\n                if (user._id === action.user.id) {\n                    return {\n                        ...user,\n                        status: action.user.status\n                    }\n                }\n                return user;\n            });\n        default:\n            return state;\n    }\n}\n\nexport default userReducer;"]},"metadata":{},"sourceType":"module"}