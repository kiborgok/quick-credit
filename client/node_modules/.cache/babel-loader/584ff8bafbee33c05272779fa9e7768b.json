{"ast":null,"code":"import * as userApi from '../../api/userApi';\nimport * as types from './actionTypes';\nexport const receiveErrors = error => ({\n  type: types.RECEIVE_ERRORS,\n  error: error.error\n});\nexport const clearErrors = () => ({\n  type: types.CLEAR_ERRORS,\n  error: ''\n});\nexport const signUpUserSuccess = user => ({\n  type: types.SIGN_UP_USER_SUCCESS,\n  user: user.data\n});\nexport const signInUserSuccess = user => ({\n  type: types.SIGN_IN_USER_SUCCESS,\n  user: user.data\n});\nexport const loadUsersSuccess = users => ({\n  type: types.LOAD_USERS_SUCCESS,\n  users: users.data\n});\nexport const loadUserSuccess = user => ({\n  type: types.LOAD_USER_SUCCESS,\n  user: user.data\n});\nexport const verifyUserSuccess = user => ({\n  type: types.VERIFY_USER_SUCCESS,\n  user: user.data\n});\nexport function loadUsers(users) {\n  return function (dispatch) {\n    return userApi.loadUsers(users).then(users => {\n      if (users.data) return dispatch(loadUsersSuccess(users));\n      return dispatch(receiveErrors(users));\n    });\n  };\n}\n;\nexport function loadUser(user) {\n  return function (dispatch) {\n    return userApi.loadUser(user).then(user => {\n      if (user.data) {\n        return dispatch(loadUserSuccess(user));\n      }\n\n      return dispatch(receiveErrors(user));\n    });\n  };\n}\n;\nexport function verifyUser(user) {\n  return function (dispatch) {\n    return userApi.verifyUser(user).then(user => {\n      if (user.data) {\n        alert('You have successfully verified your account');\n        localStorage.removeItem('verificationToken');\n        localStorage.removeItem('email');\n        return dispatch(verifyUserSuccess(user));\n      }\n\n      alert('There was a problem ' + user.error);\n      return dispatch(receiveErrors(user));\n    });\n  };\n}\n;\nexport function signup(user) {\n  return function (dispatch) {\n    return userApi.signup(user).then(user => {\n      if (user.data) {\n        localStorage.setItem('verify', {\n          token: user.data.verificationToken,\n          email: user.data.email\n        });\n        alert('Check mail to verify your account');\n        return dispatch(signInUserSuccess(user));\n      }\n\n      return dispatch(receiveErrors(user));\n    });\n  };\n}\n;\nexport const signin = user => dispatch => userApi.signin(user).then(user => {\n  if (user.data) {\n    if (user.data) {\n      localStorage.setItem('jwt', JSON.stringify({\n        'token': user.data.token,\n        'userId': user.data.userId,\n        'loan': user.data.loan,\n        'status': user.data.status,\n        'username': user.data.username,\n        'firstName': user.data.firstName,\n        'secondName': user.data.secondName,\n        'email': user.data.email,\n        'admin': user.data.admin\n      }));\n      return dispatch(signInUserSuccess(user));\n    }\n  }\n\n  return dispatch(receiveErrors(user));\n});","map":{"version":3,"sources":["/home/vanellope/Programming/Javascript/Quickloan/frontend/src/redux/actions/userActions.js"],"names":["userApi","types","receiveErrors","error","type","RECEIVE_ERRORS","clearErrors","CLEAR_ERRORS","signUpUserSuccess","user","SIGN_UP_USER_SUCCESS","data","signInUserSuccess","SIGN_IN_USER_SUCCESS","loadUsersSuccess","users","LOAD_USERS_SUCCESS","loadUserSuccess","LOAD_USER_SUCCESS","verifyUserSuccess","VERIFY_USER_SUCCESS","loadUsers","dispatch","then","loadUser","verifyUser","alert","localStorage","removeItem","signup","setItem","token","verificationToken","email","signin","JSON","stringify","userId","loan","status","username","firstName","secondName","admin"],"mappings":"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","sourcesContent":["import * as userApi from '../../api/userApi';\nimport * as types from './actionTypes';\n\nexport const receiveErrors = error => (\n    { type: types.RECEIVE_ERRORS, error: error.error }\n);\n\nexport const clearErrors = () => (\n    { type: types.CLEAR_ERRORS, error: '' }\n);\n\nexport const signUpUserSuccess = user => (\n    { type: types.SIGN_UP_USER_SUCCESS, user: user.data }\n);\n\nexport const signInUserSuccess = user => (\n    { type: types.SIGN_IN_USER_SUCCESS, user: user.data }\n);\n\nexport const loadUsersSuccess = users => (\n    { type: types.LOAD_USERS_SUCCESS, users: users.data }\n);\n\nexport const loadUserSuccess = user => (\n    { type: types.LOAD_USER_SUCCESS, user: user.data }\n);\n\nexport const verifyUserSuccess = user => (\n    { type: types.VERIFY_USER_SUCCESS, user: user.data }\n);\n\nexport function loadUsers(users) {\n    return function (dispatch) {\n        return userApi.loadUsers(users)\n            .then(users => {\n                if (users.data) return dispatch(loadUsersSuccess(users))\n                return dispatch(receiveErrors(users))\n            })\n            \n    };\n};\n\nexport function loadUser(user) {\n    return function (dispatch) {\n        return userApi.loadUser(user)\n            .then(user => {\n                if (user.data) {\n                    return dispatch(loadUserSuccess(user))\n                }\n                return dispatch(receiveErrors(user))\n            })\n            \n    };\n};\n\nexport function verifyUser(user) {\n    return function (dispatch) {\n        return userApi.verifyUser(user)\n            .then(user => {\n                if (user.data) {\n                    alert('You have successfully verified your account')\n                    localStorage.removeItem('verificationToken')\n                    localStorage.removeItem('email')\n                    return dispatch(verifyUserSuccess(user))\n                }\n                alert('There was a problem ' + user.error)\n                return dispatch(receiveErrors(user))\n            })\n            \n    };\n};\n\nexport function signup(user) {\n    return function (dispatch) {\n        return userApi.signup(user)\n            .then(user => {\n                if (user.data) {\n                    localStorage.setItem('verify', {\n                        token: user.data.verificationToken, email: user.data.email\n                    })\n                    alert('Check mail to verify your account')\n                    return dispatch(signInUserSuccess(user))\n                }\n                return dispatch(receiveErrors(user))\n            })\n            \n    };\n};\n\nexport const signin = user => dispatch => userApi.signin(user)\n    .then(user => {\n        if (user.data) {\n            if (user.data) {\n                localStorage.setItem('jwt', JSON.stringify({\n                    'token': user.data.token,\n                    'userId': user.data.userId,\n                    'loan': user.data.loan,\n                    'status': user.data.status,\n                    'username': user.data.username,\n                    'firstName': user.data.firstName,\n                    'secondName': user.data.secondName,\n                    'email': user.data.email,\n                    'admin': user.data.admin\n                }))\n                return dispatch(signInUserSuccess(user))\n            }\n        }\n        return dispatch(receiveErrors(user))\n    })\n    \n\n\n"]},"metadata":{},"sourceType":"module"}