{"ast":null,"code":"import * as userApi from '../../api/userApi';\nimport * as types from './actionTypes';\nexport const receiveErrors = error => ({\n  type: types.RECEIVE_ERRORS,\n  error: error.error\n});\nexport const clearErrors = () => ({\n  type: types.CLEAR_ERRORS,\n  error: ''\n});\nexport const signUpUserSuccess = user => ({\n  type: types.SIGN_UP_USER_SUCCESS,\n  user: user.data\n});\nexport const signInUserSuccess = user => ({\n  type: types.SIGN_IN_USER_SUCCESS,\n  user: user.data\n});\nexport const loadUsersSuccess = users => ({\n  type: types.LOAD_USERS_SUCCESS,\n  users: users.data\n});\nexport const loadUserSuccess = user => ({\n  type: types.LOAD_USER_SUCCESS,\n  user: user.data\n});\nexport const verifyUserSuccess = user => ({\n  type: types.VERIFY_USER_SUCCESS,\n  user: user.data\n});\nexport function loadUsers() {\n  return function (dispatch) {\n    return userApi.loadUsers().then(users => {\n      if (users.data) return dispatch(loadUsersSuccess(users));\n      return dispatch(receiveErrors(users));\n    }).catch(error => {\n      alert(`Network Error ${error}`);\n    });\n  };\n}\n;\nexport function loadUser() {\n  return function (dispatch) {\n    return userApi.loadUser().then(user => {\n      if (user.data) {\n        return dispatch(loadUserSuccess(user));\n      }\n\n      return dispatch(receiveErrors(user));\n    }).catch(error => {\n      alert(`Network Error ${error}`);\n    });\n  };\n}\n;\nexport function verifyUser() {\n  return function (dispatch) {\n    return userApi.verifyUser().then(user => {\n      if (user.data) {\n        alert('You have successfully verified your account');\n        localStorage.removeItem('verificationToken');\n        localStorage.removeItem('email');\n        return dispatch(verifyUserSuccess(user));\n      }\n\n      alert('There was a problem ' + user.error);\n      return dispatch(receiveErrors(user));\n    }).catch(error => {\n      alert(`Network Error ${error}`);\n    });\n  };\n}\n;\nexport function signup(user) {\n  return function (dispatch) {\n    return userApi.signup(user).then(user => {\n      if (user.data) {\n        localStorage.setItem('verify', {\n          token: user.data.verificationToken,\n          email: user.data.email\n        });\n        alert('Check mail to verify your account');\n        return dispatch(signInUserSuccess(user));\n      }\n\n      return dispatch(receiveErrors(user));\n    }).catch(error => {\n      alert(`Network Error ${error}`);\n    });\n  };\n}\n;\nexport const signin = user => dispatch => userApi.signin(user).then(user => {\n  if (user.data) {\n    if (user.data) {\n      localStorage.setItem('jwt', {\n        'token': user.dataaccessToken,\n        'userId': id,\n        'loan': loan,\n        'status': status,\n        'username': username,\n        'firstName': firstName,\n        'secondName': secondName,\n        'email': email,\n        'admin': admin\n      });\n      return dispatch(signInUserSuccess(user));\n    }\n  }\n\n  return dispatch(receiveErrors(user));\n}).catch(error => {\n  alert(`Network Error ${error}`);\n});","map":{"version":3,"sources":["/home/vanellope/Programming/Javascript/Quickloan/frontend/src/redux/actions/userActions.js"],"names":["userApi","types","receiveErrors","error","type","RECEIVE_ERRORS","clearErrors","CLEAR_ERRORS","signUpUserSuccess","user","SIGN_UP_USER_SUCCESS","data","signInUserSuccess","SIGN_IN_USER_SUCCESS","loadUsersSuccess","users","LOAD_USERS_SUCCESS","loadUserSuccess","LOAD_USER_SUCCESS","verifyUserSuccess","VERIFY_USER_SUCCESS","loadUsers","dispatch","then","catch","alert","loadUser","verifyUser","localStorage","removeItem","signup","setItem","token","verificationToken","email","signin","dataaccessToken","id","loan","status","username","firstName","secondName","admin"],"mappings":"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","sourcesContent":["import * as userApi from '../../api/userApi';\nimport * as types from './actionTypes';\n\nexport const receiveErrors = error => (\n    { type: types.RECEIVE_ERRORS, error: error.error }\n);\n\nexport const clearErrors = () => (\n    { type: types.CLEAR_ERRORS, error: ''}\n);\n\nexport const signUpUserSuccess = user => (\n    { type: types.SIGN_UP_USER_SUCCESS, user: user.data }\n);\n\nexport const signInUserSuccess = user => (\n    { type: types.SIGN_IN_USER_SUCCESS, user: user.data }\n);\n\nexport const loadUsersSuccess = users => (\n    { type: types.LOAD_USERS_SUCCESS, users: users.data }\n);\n\nexport const loadUserSuccess = user => (\n    { type: types.LOAD_USER_SUCCESS, user: user.data }\n);\n\nexport const verifyUserSuccess = user => (\n    { type: types.VERIFY_USER_SUCCESS, user: user.data }\n);\n\nexport function loadUsers() {\n    return function (dispatch) {\n        return userApi.loadUsers()\n            .then(users => {\n                if (users.data) return dispatch(loadUsersSuccess(users))\n                return dispatch(receiveErrors(users))\n            })\n            .catch(error => {\n                alert(`Network Error ${error}`)\n            })\n    };\n};\n\nexport function loadUser() {\n    return function (dispatch) {\n        return userApi.loadUser()\n            .then(user => {\n                if (user.data) {\n                    return dispatch(loadUserSuccess(user))\n                }\n                return dispatch(receiveErrors(user))\n            })\n            .catch(error => {\n                alert(`Network Error ${error}`)\n            })\n    };\n};\n\nexport function verifyUser() {\n    return function (dispatch) {\n        return userApi.verifyUser()\n            .then(user => {\n                if (user.data) {\n                    alert('You have successfully verified your account')\n                    localStorage.removeItem('verificationToken')\n                    localStorage.removeItem('email')\n                    return dispatch(verifyUserSuccess(user))\n                }\n                alert('There was a problem ' + user.error)\n                return dispatch(receiveErrors(user))\n            })\n            .catch(error => {\n                alert(`Network Error ${error}`)\n            })\n    };\n};\n\nexport function signup(user) {\n    return function (dispatch) {\n        return userApi.signup(user)\n            .then(user => {\n                if (user.data) {\n                    localStorage.setItem('verify', {\n                        token: user.data.verificationToken, email: user.data.email\n                    })\n                    alert('Check mail to verify your account')\n                    return dispatch(signInUserSuccess(user))\n                }\n                return dispatch(receiveErrors(user))\n            })\n            .catch(error => {\n                alert(`Network Error ${error}`)\n            })\n    };\n};\n\nexport const signin = user => dispatch => userApi.signin(user)\n    .then(user => {\n        if (user.data) {\n            if (user.data) {\n                localStorage.setItem('jwt', {\n                    'token': user.dataaccessToken,\n                    'userId': id,\n                    'loan': loan,\n                    'status': status,\n                    'username': username,\n                    'firstName': firstName,\n                    'secondName': secondName,\n                    'email': email,\n                    'admin': admin\n                })\n                return dispatch(signInUserSuccess(user))\n            }\n        }\n        return dispatch(receiveErrors(user))\n    })\n    .catch(error => {\n        alert(`Network Error ${error}`)\n    })\n\n\n"]},"metadata":{},"sourceType":"module"}