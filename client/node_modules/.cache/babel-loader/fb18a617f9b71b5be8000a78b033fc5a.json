{"ast":null,"code":"export const applyLoan = ({\n  amount,\n  tenor,\n  token\n}) => fetch(`api/v1/loans/${auth.userId}/apply`, {\n  method: 'POST',\n  body: JSON.stringify({\n    amount,\n    tenor\n  }),\n  headers: {\n    'Authorization': `Bearer ${auth.token}`,\n    'Content-Type': 'application/json'\n  }\n}).then(response => response.json());\nexport const repayLoan = ({\n  repaymentAmount\n}) => {\n  return fetch(`api/v1/loans/${auth.loan[0]._id}/repayment`, {\n    method: 'POST',\n    body: JSON.stringify({\n      repaymentAmount\n    }),\n    headers: {\n      'Authorization': `Bearer ${auth.token}`,\n      'Content-Type': 'application/json'\n    }\n  }).then(response => response.json());\n};\nexport const loadLoans = async () => await fetch('api/v1/loans', {\n  method: 'GET',\n  headers: {\n    'Authorization': `Bearer ${auth.token}`\n  }\n}).then(response => response.json());\nexport const loadLoan = async () => await fetch(`api/v1/loans/${auth.userId}`, {\n  method: \"GET\",\n  headers: {\n    Authorization: `Bearer ${auth.token}`\n  }\n}).then(response => response.json());\nexport const loadRepaymentHistory = async ({\n  loanId\n}) => await fetch(`api/v1/loans/${loanId}/repaymentHistory`, {\n  method: \"GET\",\n  headers: {\n    Authorization: `Bearer ${token}`\n  }\n}).then(response => response.json());\nexport const approveOrRejectLoan = ({\n  loanId,\n  status\n}) => fetch(`api/v1/loans/${loanId}`, {\n  method: 'POST',\n  body: JSON.stringify({\n    status\n  }),\n  headers: {\n    'Authorization': `Bearer ${token}`,\n    'Content-Type': 'application/json'\n  }\n}).then(response => response.json());","map":{"version":3,"sources":["/home/vanellope/Programming/Javascript/Quickloan/frontend/src/api/loanApi.js"],"names":["applyLoan","amount","tenor","token","fetch","auth","userId","method","body","JSON","stringify","headers","then","response","json","repayLoan","repaymentAmount","loan","_id","loadLoans","loadLoan","Authorization","loadRepaymentHistory","loanId","approveOrRejectLoan","status"],"mappings":"AAAA,OAAO,MAAMA,SAAS,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,KAAV;AAAiBC,EAAAA;AAAjB,CAAD,KACrBC,KAAK,CAAE,gBAAeC,IAAI,CAACC,MAAO,QAA7B,EAAsC;AACvCC,EAAAA,MAAM,EAAE,MAD+B;AAEvCC,EAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAET,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAf,CAFiC;AAGvCS,EAAAA,OAAO,EAAE;AACL,qBAAkB,UAASN,IAAI,CAACF,KAAM,EADjC;AAEL,oBAAgB;AAFX;AAH8B,CAAtC,CAAL,CAQKS,IARL,CAQUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EARtB,CADG;AAYP,OAAO,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAyB;AAC9C,SAAOZ,KAAK,CAAE,gBAAeC,IAAI,CAACY,IAAL,CAAU,CAAV,EAAaC,GAAI,YAAlC,EAA+C;AACvDX,IAAAA,MAAM,EAAE,MAD+C;AAEvDC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEM,MAAAA;AAAF,KAAf,CAFiD;AAGvDL,IAAAA,OAAO,EAAE;AACL,uBAAkB,UAASN,IAAI,CAACF,KAAM,EADjC;AAEL,sBAAgB;AAFX;AAH8C,GAA/C,CAAL,CAQFS,IARE,CAQGC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EARf,CAAP;AASH,CAVM;AAYP,OAAO,MAAMK,SAAS,GAAG,YACrB,MAAMf,KAAK,CAAC,cAAD,EAAiB;AACxBG,EAAAA,MAAM,EAAE,KADgB;AAExBI,EAAAA,OAAO,EAAE;AACL,qBAAkB,UAASN,IAAI,CAACF,KAAM;AADjC;AAFe,CAAjB,CAAL,CAMDS,IANC,CAMIC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EANhB,CADH;AAUP,OAAO,MAAMM,QAAQ,GAAG,YACtB,MAAMhB,KAAK,CAAE,gBAAeC,IAAI,CAACC,MAAO,EAA7B,EAAgC;AACzCC,EAAAA,MAAM,EAAE,KADiC;AAEzCI,EAAAA,OAAO,EAAE;AACPU,IAAAA,aAAa,EAAG,UAAShB,IAAI,CAACF,KAAM;AAD7B;AAFgC,CAAhC,CAAL,CAKHS,IALG,CAKGC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EALhB,CADD;AAQP,OAAO,MAAMQ,oBAAoB,GAAG,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAClC,MAAMnB,KAAK,CAAE,gBAAemB,MAAO,mBAAxB,EAA4C;AACrDhB,EAAAA,MAAM,EAAE,KAD6C;AAErDI,EAAAA,OAAO,EAAE;AACPU,IAAAA,aAAa,EAAG,UAASlB,KAAM;AADxB;AAF4C,CAA5C,CAAL,CAKHS,IALG,CAKGC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EALhB,CADD;AAQP,OAAO,MAAMU,mBAAmB,GAAG,CAAC;AAAED,EAAAA,MAAF;AAAUE,EAAAA;AAAV,CAAD,KAC/BrB,KAAK,CAAE,gBAAemB,MAAO,EAAxB,EAA2B;AAC5BhB,EAAAA,MAAM,EAAE,MADoB;AAE5BC,EAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEe,IAAAA;AAAF,GAAf,CAFsB;AAG5Bd,EAAAA,OAAO,EAAE;AACL,qBAAkB,UAASR,KAAM,EAD5B;AAEL,oBAAgB;AAFX;AAHmB,CAA3B,CAAL,CAQKS,IARL,CAQUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EARtB,CADG","sourcesContent":["export const applyLoan = ({ amount, tenor, token}) => (\n    fetch(`api/v1/loans/${auth.userId}/apply`, {\n        method: 'POST',\n        body: JSON.stringify({ amount, tenor }),\n        headers: {\n            'Authorization': `Bearer ${auth.token}`,\n            'Content-Type': 'application/json'\n        }\n    })\n        .then(response => response.json())\n);\n\nexport const repayLoan = ({ repaymentAmount }) => {\n    return fetch(`api/v1/loans/${auth.loan[0]._id}/repayment`, {\n        method: 'POST',\n        body: JSON.stringify({ repaymentAmount }),\n        headers: {\n            'Authorization': `Bearer ${auth.token}`,\n            'Content-Type': 'application/json'\n        }\n    })\n        .then(response => response.json())\n};\n\nexport const loadLoans = async () => (\n    await fetch('api/v1/loans', {\n        method: 'GET',\n        headers: {\n            'Authorization': `Bearer ${auth.token}`\n        }\n    })\n        .then(response => response.json())\n);\n\nexport const loadLoan = async () =>\n  await fetch(`api/v1/loans/${auth.userId}`, {\n    method: \"GET\",\n    headers: {\n      Authorization: `Bearer ${auth.token}`,\n    },\n  }).then((response) => response.json());\n\nexport const loadRepaymentHistory = async ({ loanId }) =>\n  await fetch(`api/v1/loans/${loanId}/repaymentHistory`, {\n    method: \"GET\",\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  }).then((response) => response.json());\n\nexport const approveOrRejectLoan = ({ loanId, status }) => (\n    fetch(`api/v1/loans/${loanId}`, {\n        method: 'POST',\n        body: JSON.stringify({ status }),\n        headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n        }\n    })\n        .then(response => response.json())\n);"]},"metadata":{},"sourceType":"module"}