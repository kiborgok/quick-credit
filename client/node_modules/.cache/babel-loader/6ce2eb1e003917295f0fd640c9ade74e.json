{"ast":null,"code":"export const applyLoan = ({\n  amount,\n  tenor,\n  userId,\n  token\n}) => fetch(`api/v1/loans/${userId}/apply`, {\n  method: 'POST',\n  body: JSON.stringify({\n    amount,\n    tenor\n  }),\n  headers: {\n    'Authorization': `Bearer ${token}`,\n    'Content-Type': 'application/json'\n  }\n}).then(response => response.json());\nexport const repayLoan = ({\n  repaymentAmount,\n  loanId,\n  token\n}) => {\n  return fetch(`api/v1/loans/${loanId}/repayment`, {\n    method: 'POST',\n    body: JSON.stringify({\n      repaymentAmount\n    }),\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  }).then(response => console.log(response.json()));\n};\nexport const loadLoans = async ({\n  token\n}) => await fetch(\"api/v1/loans\", {\n  method: \"GET\",\n  headers: {\n    Authorization: `Bearer ${token}`,\n    \"Content-Type\": \"application/json\"\n  }\n}).then(response => response.json());\nexport const loadLoan = async ({\n  userId,\n  token\n}) => await fetch(`api/v1/loans/${userId}`, {\n  method: \"GET\",\n  headers: {\n    Authorization: `Bearer ${token}`,\n    \"Content-Type\": \"application/json\"\n  }\n}).then(response => response.json());\nexport const loadRepaymentHistory = async ({\n  loanId,\n  token\n}) => await fetch(`api/v1/loans/${loanId}/repaymentHistory`, {\n  method: \"GET\",\n  headers: {\n    Authorization: `Bearer ${token}`,\n    \"Content-Type\": \"application/json\"\n  }\n}).then(response => response.json());\nexport const approveOrRejectLoan = ({\n  loanId,\n  status,\n  token\n}) => fetch(`api/v1/loans/${loanId}`, {\n  method: 'POST',\n  body: JSON.stringify({\n    status\n  }),\n  headers: {\n    'Authorization': `Bearer ${token}`,\n    'Content-Type': 'application/json'\n  }\n}).then(response => response.json());","map":{"version":3,"sources":["/home/vanellope/Programming/Javascript/Quickloan/frontend/src/api/loanApi.js"],"names":["applyLoan","amount","tenor","userId","token","fetch","method","body","JSON","stringify","headers","then","response","json","repayLoan","repaymentAmount","loanId","console","log","loadLoans","Authorization","loadLoan","loadRepaymentHistory","approveOrRejectLoan","status"],"mappings":"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","sourcesContent":["export const applyLoan = ({ amount, tenor, userId, token }) => (\n  fetch(`api/v1/loans/${userId}/apply`, {\n    method: 'POST',\n    body: JSON.stringify({ amount, tenor }),\n    headers: {\n      'Authorization': `Bearer ${token}`,\n      'Content-Type': 'application/json'\n    }\n  })\n    .then(response => response.json())\n);\n\nexport const repayLoan = ({ repaymentAmount, loanId, token }) => {\n  return fetch(`api/v1/loans/${loanId}/repayment`, {\n    method: 'POST',\n    body: JSON.stringify({ repaymentAmount }),\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  })\n    .then(response => console.log(response.json()))\n};\n\nexport const loadLoans = async ({ token }) =>\n         await fetch(\"api/v1/loans\", {\n           method: \"GET\",\n           headers: {\n             Authorization: `Bearer ${token}`,\n             \"Content-Type\": \"application/json\",\n           },\n         }).then((response) => response.json());\n\nexport const loadLoan = async ({ userId, token }) =>\n         await fetch(`api/v1/loans/${userId}`, {\n           method: \"GET\",\n           headers: {\n             Authorization: `Bearer ${token}`,\n             \"Content-Type\": \"application/json\",\n           },\n         }).then((response) => response.json());\n\nexport const loadRepaymentHistory = async ({ loanId, token }) =>\n         await fetch(`api/v1/loans/${loanId}/repaymentHistory`, {\n           method: \"GET\",\n           headers: {\n             Authorization: `Bearer ${token}`,\n             \"Content-Type\": \"application/json\",\n           },\n         }).then((response) => response.json());\n\nexport const approveOrRejectLoan = ({ loanId, status, token }) => (\n  fetch(`api/v1/loans/${loanId}`, {\n    method: 'POST',\n    body: JSON.stringify({ status }),\n    headers: {\n      'Authorization': `Bearer ${token}`,\n      'Content-Type': 'application/json'\n    }\n  })\n    .then(response => response.json())\n);"]},"metadata":{},"sourceType":"module"}