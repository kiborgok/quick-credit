{"ast":null,"code":"var _jsxFileName = \"/home/vanellope/Programming/Javascript/Quickloan/quick-credit-frontend/src/components/Login.js\";\nimport React, { useState } from 'react';\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from 'redux';\nimport * as userActions from '../redux/actions/userActions';\n\nconst mapStateToProps = ({\n  errors\n}) => ({\n  errors\n});\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(userActions, dispatch)\n});\n\nconst Login = ({\n  actions,\n  errors,\n  history\n}) => {\n  const [showError, setShowError] = useState(false);\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    validationSchema: Yup.object({\n      email: Yup.string().email(\"Invalid email address\").required(\"Required\"),\n      password: Yup.string().required(\"Required\")\n    }),\n    onSubmit: values => {\n      const user = {\n        email: values.email,\n        password: values.password\n      };\n\n      const signUser = async () => {\n        const login = await actions.signin(user);\n\n        if (login.user) {\n          history.push(\"/\");\n          return window.location.reload();\n        }\n\n        setShowError(true);\n      };\n\n      signUser();\n    }\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, \"Sign In\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, showError && errors), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    name: \"email\",\n    type: \"email\"\n  }, formik.getFieldProps(\"email\"), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  })), formik.touched.email && formik.errors.email ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, formik.errors.email) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    name: \"password\",\n    type: \"password\"\n  }, formik.getFieldProps(\"password\"), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  })), formik.touched.password && formik.errors.password ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, formik.errors.password) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, \"Sign In\"), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      padding: \"4px\",\n      marginLeft: \"3px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, \"Don't have an account\", \" \", /*#__PURE__*/React.createElement(Link, {\n    style: {\n      textDecoration: \"none\"\n    },\n    to: \"/signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }, \"Signup\"))))));\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Login));","map":{"version":3,"sources":["/home/vanellope/Programming/Javascript/Quickloan/quick-credit-frontend/src/components/Login.js"],"names":["React","useState","useFormik","Yup","Link","withRouter","connect","bindActionCreators","userActions","mapStateToProps","errors","mapDispatchToProps","dispatch","actions","Login","history","showError","setShowError","formik","initialValues","email","password","validationSchema","object","string","required","onSubmit","values","user","signUser","login","signin","push","window","location","reload","handleSubmit","getFieldProps","touched","padding","marginLeft","textDecoration"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from 'redux';\nimport * as userActions from '../redux/actions/userActions';\n\nconst mapStateToProps = ({ errors }) => ({ errors });\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(userActions, dispatch)\n});\n\nconst Login = ({ actions, errors, history }) => {\n  const [showError, setShowError] = useState(false);\n\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\",\n    },\n    validationSchema: Yup.object({\n      email: Yup.string()\n        .email(\"Invalid email address\")\n        .required(\"Required\"),\n      password: Yup.string()\n        .required(\"Required\"),\n    }),\n    onSubmit: (values) => {\n      const user = {\n        email: values.email,\n        password: values.password,\n      };\n      const signUser = async () => {\n        const login = await actions.signin(user);\n        if (login.user) {\n          history.push(\"/\");\n          return window.location.reload();\n        }\n        setShowError(true);\n      };\n      signUser();\n    },\n  });\n  return (\n    <>\n      <div className=\"login-form\">\n        <header>\n          <h1>Sign In</h1>\n        </header>\n        <div className='error'>{showError && errors}</div>\n        <form onSubmit={formik.handleSubmit} noValidate>\n          <div className=\"form-row\">\n            <label htmlFor=\"email\">Email</label>\n            <input\n              name=\"email\"\n              type=\"email\"\n              {...formik.getFieldProps(\"email\")}\n            />\n            {formik.touched.email && formik.errors.email ? (\n              <div className='error'>{formik.errors.email}</div>\n            ) : null}\n          </div>\n          <div className=\"form-row\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              name=\"password\"\n              type=\"password\"\n              {...formik.getFieldProps(\"password\")}\n            />\n            {formik.touched.password && formik.errors.password ? (\n              <div className='error'>{formik.errors.password}</div>\n            ) : null}\n          </div>\n          <div className=\"form-row\">\n            <button type='submit'>Sign In</button>\n            <p style={{ padding: \"4px\", marginLeft: \"3px\" }}>\n              Don't have an account{\" \"}\n              <Link style={{ textDecoration: \"none\" }} to=\"/signup\">\n                Signup\n                </Link>\n            </p>\n          </div>\n        </form>\n      </div>\n    </>\n  );\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Login));"]},"metadata":{},"sourceType":"module"}