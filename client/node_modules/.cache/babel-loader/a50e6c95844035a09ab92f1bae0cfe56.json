{"ast":null,"code":"import _regeneratorRuntime from\"/home/vanellope/Programming/Javascript/Quickloan/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/vanellope/Programming/Javascript/Quickloan/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/vanellope/Programming/Javascript/Quickloan/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{useFormik}from'formik';import*as Yup from'yup';import{Link}from'react-router-dom';import{connect}from'react-redux';import{bindActionCreators}from'redux';import*as userActions from'../redux/actions/userActions';var mapStateToProps=function mapStateToProps(_ref){var errors=_ref.errors;return{errors:errors};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{actions:bindActionCreators(userActions,dispatch)};};var Signup=function Signup(_ref2){var errors=_ref2.errors,actions=_ref2.actions,history=_ref2.history;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showError=_useState2[0],setShowError=_useState2[1];var formik=useFormik({initialValues:{firstName:\"\",secondName:\"\",username:\"\",email:\"\",password:\"\",passwordConfirmation:\"\"},validationSchema:Yup.object({firstName:Yup.string().min(2,\"Must be 2 characters or more\").max(15,\"Must be 15 characters or less\").required(\"Required\"),secondName:Yup.string().min(2,\"Must be 2 characters or more\").max(15,\"Must be 15 characters or less\").required(\"Required\"),username:Yup.string().min(2,\"Must be 2 characters or more\").max(15,\"Must be 15 characters or less\").required(\"Required\"),email:Yup.string().email('Invalid email address').required(\"Required\"),password:Yup.string().matches(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{6,16}$/,\"Must be 6-16 characters, one capital letter, one lowercase letter, one digit and one special character\").required(\"Required\"),passwordConfirmation:Yup.string().oneOf([Yup.ref(\"password\"),null],\"Passwords must match\").required(\"Required\")}),onSubmit:function onSubmit(values){var user={firstName:values.firstName,secondName:values.secondName,username:values.username,email:values.email,password:values.password};var signUser=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var signUp;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return actions.signup(user);case 2:signUp=_context.sent;if(!signUp.user){_context.next=5;break;}return _context.abrupt(\"return\",history.push(\"/login\"));case 5:setShowError(true);case 6:case\"end\":return _context.stop();}}},_callee);}));return function signUser(){return _ref3.apply(this,arguments);};}();signUser();}});return/*#__PURE__*/React.createElement(\"div\",{className:\"signup-form\"},/*#__PURE__*/React.createElement(\"header\",null,/*#__PURE__*/React.createElement(\"h1\",null,\"Sign Up\")),/*#__PURE__*/React.createElement(\"div\",{className:\"error\"},showError&&errors),/*#__PURE__*/React.createElement(\"form\",{onSubmit:formik.handleSubmit},/*#__PURE__*/React.createElement(\"div\",{className:\"form-row\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"firstName\"},\"First Name\"),/*#__PURE__*/React.createElement(\"input\",Object.assign({name:\"firstName\",type:\"text\"},formik.getFieldProps(\"firstName\"))),formik.touched.firstName&&formik.errors.firstName?/*#__PURE__*/React.createElement(\"div\",{className:\"error\"},formik.errors.firstName):null),/*#__PURE__*/React.createElement(\"div\",{className:\"form-row\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"secondName\"},\"Second Name\"),/*#__PURE__*/React.createElement(\"input\",Object.assign({name:\"secondName\",type:\"text\"},formik.getFieldProps(\"secondName\"))),formik.touched.secondName&&formik.errors.secondName?/*#__PURE__*/React.createElement(\"div\",{className:\"error\"},formik.errors.secondName):null),/*#__PURE__*/React.createElement(\"div\",{className:\"form-row\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"username\"},\"Username\"),/*#__PURE__*/React.createElement(\"input\",Object.assign({name:\"username\",type:\"text\"},formik.getFieldProps(\"username\"))),formik.touched.username&&formik.errors.username?/*#__PURE__*/React.createElement(\"div\",{className:\"error\"},formik.errors.username):null),/*#__PURE__*/React.createElement(\"div\",{className:\"form-row\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"email\"},\"Email\"),/*#__PURE__*/React.createElement(\"input\",Object.assign({name:\"email\",type:\"email\"},formik.getFieldProps(\"email\"))),formik.touched.email&&formik.errors.email?/*#__PURE__*/React.createElement(\"div\",{className:\"error\"},formik.errors.email):null),/*#__PURE__*/React.createElement(\"div\",{className:\"form-row\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"password\"},\"Password\"),/*#__PURE__*/React.createElement(\"input\",Object.assign({name:\"password\",type:\"password\"},formik.getFieldProps(\"password\"))),formik.touched.password&&formik.errors.password?/*#__PURE__*/React.createElement(\"div\",{className:\"error\"},formik.errors.password):null),/*#__PURE__*/React.createElement(\"div\",{className:\"form-row\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"passwordConfirmation\"},\"Password-Confirmation\"),/*#__PURE__*/React.createElement(\"input\",Object.assign({name:\"passwordConfirmation\",type:\"password\"},formik.getFieldProps(\"passwordConfirmation\"))),formik.touched.passwordConfirmation&&formik.errors.passwordConfirmation?/*#__PURE__*/React.createElement(\"div\",{className:\"error\"},formik.errors.passwordConfirmation):null),/*#__PURE__*/React.createElement(\"div\",{className:\"form-row\"},/*#__PURE__*/React.createElement(\"button\",{type:\"submit\"},\"Sign Up\"),/*#__PURE__*/React.createElement(\"p\",{style:{padding:\"4px\",marginLeft:\"3px\"}},\"Already have an account\",\" \",/*#__PURE__*/React.createElement(Link,{style:{textDecoration:\"none\"},to:\"/login\"},\"Login\")))));};export default connect(mapStateToProps,mapDispatchToProps)(Signup);","map":{"version":3,"sources":["/home/vanellope/Programming/Javascript/Quickloan/frontend/src/components/Signup.js"],"names":["React","useState","useFormik","Yup","Link","connect","bindActionCreators","userActions","mapStateToProps","errors","mapDispatchToProps","dispatch","actions","Signup","history","showError","setShowError","formik","initialValues","firstName","secondName","username","email","password","passwordConfirmation","validationSchema","object","string","min","max","required","matches","oneOf","ref","onSubmit","values","user","signUser","signup","signUp","push","handleSubmit","getFieldProps","touched","padding","marginLeft","textDecoration"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as userActions from '../redux/actions/userActions';\n\nconst mapStateToProps = ({ errors }) => ({ errors });\n\nconst mapDispatchToProps = dispatch => (\n  { actions: bindActionCreators(userActions, dispatch) }\n);\n\nconst Signup = ({ errors, actions, history }) => {\n  const [showError, setShowError] = useState(false);\n\n  const formik = useFormik({\n    initialValues: {\n      firstName: \"\",\n      secondName: \"\",\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      passwordConfirmation: \"\",\n    },\n    validationSchema: Yup.object({\n      firstName: Yup.string()\n        .min(2, \"Must be 2 characters or more\")\n        .max(15, \"Must be 15 characters or less\")\n        .required(\"Required\"),\n      secondName: Yup.string()\n        .min(2, \"Must be 2 characters or more\")\n        .max(15, \"Must be 15 characters or less\")\n        .required(\"Required\"),\n      username: Yup.string()\n        .min(2, \"Must be 2 characters or more\")\n        .max(15, \"Must be 15 characters or less\")\n        .required(\"Required\"),\n      email: Yup.string()\n        .email('Invalid email address')\n        .required(\"Required\"),\n      password: Yup.string()\n        .matches(\n          /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{6,16}$/,\n          `Must be 6-16 characters, one capital letter, one lowercase letter, one digit and one special character`\n        )\n        .required(\"Required\"),\n      passwordConfirmation: Yup.string()\n        .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\n        .required(\"Required\"),\n    }),\n    onSubmit: (values) => {\n      const user = {\n        firstName: values.firstName,\n        secondName: values.secondName,\n        username: values.username,\n        email: values.email,\n        password: values.password,\n      };\n      const signUser = async () => {\n        const signUp = await actions.signup(user);\n        if (signUp.user) {\n          return history.push(\"/login\");\n        }\n        setShowError(true);\n      };\n      signUser();\n    },\n  });\n\n  return (\n    <div className=\"signup-form\">\n      <header>\n        <h1>Sign Up</h1>\n      </header>\n      <div className='error'>{showError && errors}</div>\n\n      <form onSubmit={formik.handleSubmit}>\n        <div className=\"form-row\">\n          <label htmlFor=\"firstName\">First Name</label>\n          <input\n            name=\"firstName\"\n            type=\"text\"\n            {...formik.getFieldProps(\"firstName\")}\n          />\n          {formik.touched.firstName && formik.errors.firstName ? (\n            <div className='error'>{formik.errors.firstName}</div>\n          ) : null}\n        </div>\n        <div className=\"form-row\">\n          <label htmlFor=\"secondName\">Second Name</label>\n          <input\n            name=\"secondName\"\n            type=\"text\"\n            {...formik.getFieldProps(\"secondName\")}\n          />\n          {formik.touched.secondName && formik.errors.secondName ? (\n            <div className='error'>{formik.errors.secondName}</div>\n          ) : null}\n        </div>\n        <div className=\"form-row\">\n          <label htmlFor=\"username\">Username</label>\n          <input\n            name=\"username\"\n            type=\"text\"\n            {...formik.getFieldProps(\"username\")}\n          />\n          {formik.touched.username && formik.errors.username ? (\n            <div className='error'>{formik.errors.username}</div>\n          ) : null}\n        </div>\n        <div className=\"form-row\">\n          <label htmlFor=\"email\">Email</label>\n          <input name=\"email\" type=\"email\" {...formik.getFieldProps(\"email\")} />\n          {formik.touched.email && formik.errors.email ? (\n            <div className='error'>{formik.errors.email}</div>\n          ) : null}\n        </div>\n        <div className=\"form-row\">\n          <label htmlFor=\"password\">Password</label>\n          <input\n            name=\"password\"\n            type=\"password\"\n            {...formik.getFieldProps(\"password\")}\n          />\n          {formik.touched.password && formik.errors.password ? (\n            <div className='error'>{formik.errors.password}</div>\n          ) : null}\n        </div>\n        <div className=\"form-row\">\n          <label htmlFor=\"passwordConfirmation\">Password-Confirmation</label>\n          <input\n            name=\"passwordConfirmation\"\n            type=\"password\"\n            {...formik.getFieldProps(\"passwordConfirmation\")}\n          />\n          {formik.touched.passwordConfirmation &&\n          formik.errors.passwordConfirmation ? (\n              <div className='error'>{formik.errors.passwordConfirmation}</div>\n          ) : null}\n        </div>\n        <div className=\"form-row\">\n          <button type='submit'>\n            Sign Up\n          </button>\n          <p style={{ padding: \"4px\", marginLeft: \"3px\" }}>\n            Already have an account{\" \"}\n            <Link style={{ textDecoration: \"none\" }} to=\"/login\">\n              Login\n            </Link>\n          </p>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);\n"]},"metadata":{},"sourceType":"module"}