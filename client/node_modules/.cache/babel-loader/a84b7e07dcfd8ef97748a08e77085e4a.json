{"ast":null,"code":"import _objectSpread from\"/home/vanellope/Programming/Javascript/Quickloan/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import*as types from'../actions/actionTypes';import initialState from'./initialState';var userReducer=function userReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState.users;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case types.LOAD_USERS_SUCCESS:return action.users;case types.LOAD_USER_SUCCESS:return action.user;case types.SIGN_UP_USER_SUCCESS:return state;case types.VERIFY_USER_SUCCESS:return state.map(function(user){if(user._id===action.user.id){return _objectSpread(_objectSpread({},user),{},{status:action.user.status});}return user;});default:return state;}};export default userReducer;","map":{"version":3,"sources":["/home/vanellope/Programming/Javascript/Quickloan/frontend/src/redux/reducers/userReducer.js"],"names":["types","initialState","userReducer","state","users","action","type","LOAD_USERS_SUCCESS","LOAD_USER_SUCCESS","user","SIGN_UP_USER_SUCCESS","VERIFY_USER_SUCCESS","map","_id","id","status"],"mappings":"+KAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,wBAAvB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAwC,IAAvCC,CAAAA,KAAuC,2DAA/BF,YAAY,CAACG,KAAkB,IAAXC,CAAAA,MAAW,2CACxD,OAAQA,MAAM,CAACC,IAAf,EACI,IAAKN,CAAAA,KAAK,CAACO,kBAAX,CACI,MAAOF,CAAAA,MAAM,CAACD,KAAd,CACJ,IAAKJ,CAAAA,KAAK,CAACQ,iBAAX,CACI,MAAOH,CAAAA,MAAM,CAACI,IAAd,CACJ,IAAKT,CAAAA,KAAK,CAACU,oBAAX,CACI,MAAOP,CAAAA,KAAP,CACJ,IAAKH,CAAAA,KAAK,CAACW,mBAAX,CACI,MAAOR,CAAAA,KAAK,CAACS,GAAN,CAAU,SAAAH,IAAI,CAAI,CACrB,GAAIA,IAAI,CAACI,GAAL,GAAaR,MAAM,CAACI,IAAP,CAAYK,EAA7B,CAAiC,CAC7B,sCACOL,IADP,MAEIM,MAAM,CAAEV,MAAM,CAACI,IAAP,CAAYM,MAFxB,GAIH,CACD,MAAON,CAAAA,IAAP,CACH,CARM,CAAP,CASJ,QACI,MAAON,CAAAA,KAAP,CAlBR,CAoBH,CArBD,CAuBA,cAAeD,CAAAA,WAAf","sourcesContent":["import * as types from '../actions/actionTypes';\nimport initialState from './initialState';\n\nconst userReducer = (state = initialState.users, action) => {\n    switch (action.type) {\n        case types.LOAD_USERS_SUCCESS:\n            return action.users\n        case types.LOAD_USER_SUCCESS:\n            return action.user\n        case types.SIGN_UP_USER_SUCCESS:\n            return state\n        case types.VERIFY_USER_SUCCESS:\n            return state.map(user => {\n                if (user._id === action.user.id) {\n                    return {\n                        ...user,\n                        status: action.user.status\n                    }\n                }\n                return user;\n            });\n        default:\n            return state;\n    }\n}\n\nexport default userReducer;"]},"metadata":{},"sourceType":"module"}