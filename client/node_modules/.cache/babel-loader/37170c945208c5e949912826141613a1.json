{"ast":null,"code":"import _objectSpread from\"/home/vanellope/Programming/Javascript/Quickloan/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import*as types from'../actions/actionTypes';import initialState from'./initialState';var loanReducer=function loanReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState.loans;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case types.CREATE_LOAN:return state;case types.REPAY_LOAN:return state;case types.LOAD_LOAN_SUCCESS:return action.loan;case types.LOAD_LOANS_SUCCESS:return action.loans;case types.APPROVE_OR_REJECT_LOAN:return state.map(function(loan){if(loan._id===action.loan.loanId){return _objectSpread(_objectSpread({},loan),{},{status:action.loan.status});}return loan;});default:return state;}};export default loanReducer;","map":{"version":3,"sources":["/home/vanellope/Programming/Javascript/Quickloan/frontend/src/redux/reducers/loanReducer.js"],"names":["types","initialState","loanReducer","state","loans","action","type","CREATE_LOAN","REPAY_LOAN","LOAD_LOAN_SUCCESS","loan","LOAD_LOANS_SUCCESS","APPROVE_OR_REJECT_LOAN","map","_id","loanId","status"],"mappings":"+KAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,wBAAvB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAwC,IAAvCC,CAAAA,KAAuC,2DAA/BF,YAAY,CAACG,KAAkB,IAAXC,CAAAA,MAAW,2CACxD,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKN,CAAAA,KAAK,CAACO,WAAX,CACE,MAAOJ,CAAAA,KAAP,CACF,IAAKH,CAAAA,KAAK,CAACQ,UAAX,CACE,MAAOL,CAAAA,KAAP,CACF,IAAKH,CAAAA,KAAK,CAACS,iBAAX,CACE,MAAOJ,CAAAA,MAAM,CAACK,IAAd,CACF,IAAKV,CAAAA,KAAK,CAACW,kBAAX,CACE,MAAON,CAAAA,MAAM,CAACD,KAAd,CACF,IAAKJ,CAAAA,KAAK,CAACY,sBAAX,CACE,MAAOT,CAAAA,KAAK,CAACU,GAAN,CAAU,SAACH,IAAD,CAAU,CACzB,GAAIA,IAAI,CAACI,GAAL,GAAaT,MAAM,CAACK,IAAP,CAAYK,MAA7B,CAAqC,CACnC,sCACKL,IADL,MAEEM,MAAM,CAAEX,MAAM,CAACK,IAAP,CAAYM,MAFtB,GAID,CACD,MAAON,CAAAA,IAAP,CACD,CARM,CAAP,CASF,QACE,MAAOP,CAAAA,KAAP,CApBJ,CAsBH,CAvBD,CAyBA,cAAeD,CAAAA,WAAf","sourcesContent":["import * as types from '../actions/actionTypes';\nimport initialState from './initialState';\n\nconst loanReducer = (state = initialState.loans, action) => {\n    switch (action.type) {\n      case types.CREATE_LOAN:\n        return state;\n      case types.REPAY_LOAN:\n        return state;\n      case types.LOAD_LOAN_SUCCESS:\n        return action.loan;\n      case types.LOAD_LOANS_SUCCESS:\n        return action.loans;\n      case types.APPROVE_OR_REJECT_LOAN:\n        return state.map((loan) => {\n          if (loan._id === action.loan.loanId) {\n            return {\n              ...loan,\n              status: action.loan.status,\n            };\n          }\n          return loan;\n        });\n      default:\n        return state;\n    }\n}\n\nexport default loanReducer;"]},"metadata":{},"sourceType":"module"}