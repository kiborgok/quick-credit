{"ast":null,"code":"import * as types from '../actions/actionTypes';\nimport initialState from './initialState';\n\nconst loanReducer = (state = initialState.loans, action) => {\n  switch (action.type) {\n    case types.CREATE_LOAN:\n      return state;\n\n    case types.REPAY_LOAN:\n      return state;\n\n    case types.LOAD_LOAN_SUCCESS:\n      return action.loan;\n\n    case types.LOAD_LOANS_SUCCESS:\n      return action.loans;\n\n    case types.APPROVE_OR_REJECT_LOAN:\n      return state.map(loan => {\n        if (loan._id === action.loan.loanId) {\n          return { ...loan,\n            status: action.loan.status\n          };\n        }\n\n        return loan;\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default loanReducer;","map":{"version":3,"sources":["/home/vanellope/Programming/Javascript/Quickloan/frontend/src/redux/reducers/loanReducer.js"],"names":["types","initialState","loanReducer","state","loans","action","type","CREATE_LOAN","REPAY_LOAN","LOAD_LOAN_SUCCESS","loan","LOAD_LOANS_SUCCESS","APPROVE_OR_REJECT_LOAN","map","_id","loanId","status"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,wBAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGF,YAAY,CAACG,KAAtB,EAA6BC,MAA7B,KAAwC;AACxD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,KAAK,CAACO,WAAX;AACE,aAAOJ,KAAP;;AACF,SAAKH,KAAK,CAACQ,UAAX;AACE,aAAOL,KAAP;;AACF,SAAKH,KAAK,CAACS,iBAAX;AACE,aAAOJ,MAAM,CAACK,IAAd;;AACF,SAAKV,KAAK,CAACW,kBAAX;AACE,aAAON,MAAM,CAACD,KAAd;;AACF,SAAKJ,KAAK,CAACY,sBAAX;AACE,aAAOT,KAAK,CAACU,GAAN,CAAWH,IAAD,IAAU;AACzB,YAAIA,IAAI,CAACI,GAAL,KAAaT,MAAM,CAACK,IAAP,CAAYK,MAA7B,EAAqC;AACnC,iBAAO,EACL,GAAGL,IADE;AAELM,YAAAA,MAAM,EAAEX,MAAM,CAACK,IAAP,CAAYM;AAFf,WAAP;AAID;;AACD,eAAON,IAAP;AACD,OARM,CAAP;;AASF;AACE,aAAOP,KAAP;AApBJ;AAsBH,CAvBD;;AAyBA,eAAeD,WAAf","sourcesContent":["import * as types from '../actions/actionTypes';\nimport initialState from './initialState';\n\nconst loanReducer = (state = initialState.loans, action) => {\n    switch (action.type) {\n      case types.CREATE_LOAN:\n        return state;\n      case types.REPAY_LOAN:\n        return state;\n      case types.LOAD_LOAN_SUCCESS:\n        return action.loan;\n      case types.LOAD_LOANS_SUCCESS:\n        return action.loans;\n      case types.APPROVE_OR_REJECT_LOAN:\n        return state.map((loan) => {\n          if (loan._id === action.loan.loanId) {\n            return {\n              ...loan,\n              status: action.loan.status,\n            };\n          }\n          return loan;\n        });\n      default:\n        return state;\n    }\n}\n\nexport default loanReducer;"]},"metadata":{},"sourceType":"module"}